- hosts: odoo

  tasks:
    - name: Make sure necessary packages are installed
      apt:
        name: "{{ item }}"
        state: latest
        update_cache: yes
      loop:
        - libxdamage1
        - libgbm1
        - libxkbcommon0
        - pip
      become: true

    - name: Install the docker launcher from pip
      pip:
        name:
          - pymtech_docker_launcher
        state: latest
      become: true

    - name: Clone repo to temporary location
      ansible.builtin.git:
        repo: https://github.com/zoltar238/pymtech_docker.git
        dest: /tmp/docker_repo_tmp
        version: master
        force: yes
      become: true
      register: git_updated

    - name: Sync files to production directory
      ansible.builtin.synchronize:
        src: /tmp/docker_repo_tmp/
        dest: /opt/docker/
        delete: no
        recursive: yes
      delegate_to: "{{ inventory_hostname }}"
      become: true
      when: git_updated.changed
      register: git_output

    - name: Create the necessary directories for the Odoo docker containers
      file:
        path: /opt/docker/{{ item }}
        state: directory
        mode: '0755'
      loop:
        - addons
        - log
        - cache
      become: true

    - name: Create the necessary files for the Odoo docker containers
      copy:
        content: ""
        dest: /opt/docker/{{ item }}
        force: no
        mode: '0755'
      become: true
      loop:
        - cache/addons_cache.json
        - log/odoo-server.log
        - addons/requirements.txt

    - name: Create .env file from template
      template:
        src: ../templates/odoo.env.j2
        dest: /opt/docker/.env
        mode: '0644'
      become: true
      register: env_file

    - name: Configure containers to use available resources
      command:
        chdir: /opt/docker/
        cmd: pymtech-docker-launcher config auto-config
      when: git_output.changed or env_file.changed
      ignore_errors: yes
      become: true

    - name: Relaunch containers
      command:
        chdir: /opt/docker/
        cmd: pymtech-docker-launcher
      when: git_output.changed or env_file.changed
      ignore_errors: yes
      become: true